[{"/Users/francisokoro/Documents/MerkFabz/src/index.tsx":"1","/Users/francisokoro/Documents/MerkFabz/src/scripts/Firestore.ts":"2","/Users/francisokoro/Documents/MerkFabz/src/components/SideBar/SideBar.tsx":"3","/Users/francisokoro/Documents/MerkFabz/src/components/Register/Email.tsx":"4","/Users/francisokoro/Documents/MerkFabz/src/components/Cart/Cart.tsx":"5","/Users/francisokoro/Documents/MerkFabz/src/components/Profile/Profile.tsx":"6","/Users/francisokoro/Documents/MerkFabz/src/scripts/Role.ts":"7","/Users/francisokoro/Documents/MerkFabz/src/App.tsx":"8","/Users/francisokoro/Documents/MerkFabz/src/components/Login/Login.tsx":"9","/Users/francisokoro/Documents/MerkFabz/src/components/Register/Register.tsx":"10","/Users/francisokoro/Documents/MerkFabz/src/scripts/Auth.ts":"11","/Users/francisokoro/Documents/MerkFabz/src/scripts/Order.ts":"12","/Users/francisokoro/Documents/MerkFabz/src/scripts/Item.ts":"13","/Users/francisokoro/Documents/MerkFabz/src/reportWebVitals.ts":"14","/Users/francisokoro/Documents/MerkFabz/src/components/Slider/Slider.js":"15","/Users/francisokoro/Documents/MerkFabz/src/components/Slider/SliderObject.js":"16","/Users/francisokoro/Documents/MerkFabz/src/components/Slider/SlideImg.js":"17","/Users/francisokoro/Documents/MerkFabz/src/components/Header/Header.tsx":"18"},{"size":501,"mtime":1606475880640,"results":"19","hashOfConfig":"20"},{"size":3439,"mtime":1606435226529,"results":"21","hashOfConfig":"20"},{"size":152,"mtime":1606435226527,"results":"22","hashOfConfig":"20"},{"size":1062,"mtime":1606435226527,"results":"23","hashOfConfig":"20"},{"size":268,"mtime":1606435226524,"results":"24","hashOfConfig":"20"},{"size":1509,"mtime":1606435226526,"results":"25","hashOfConfig":"20"},{"size":1158,"mtime":1606435226529,"results":"26","hashOfConfig":"20"},{"size":2493,"mtime":1606484472408,"results":"27","hashOfConfig":"20"},{"size":2899,"mtime":1606435226526,"results":"28","hashOfConfig":"20"},{"size":5834,"mtime":1606435226527,"results":"29","hashOfConfig":"20"},{"size":7150,"mtime":1606435226529,"results":"30","hashOfConfig":"20"},{"size":1306,"mtime":1606435226529,"results":"31","hashOfConfig":"20"},{"size":1121,"mtime":1606435226529,"results":"32","hashOfConfig":"20"},{"size":425,"mtime":1606435226528,"results":"33","hashOfConfig":"20"},{"size":854,"mtime":1606477532015,"results":"34","hashOfConfig":"20"},{"size":320,"mtime":1606486926695,"results":"35","hashOfConfig":"20"},{"size":155,"mtime":1606475227562,"results":"36","hashOfConfig":"20"},{"size":3885,"mtime":1606435226525,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3ksz8u",{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"43"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"43"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"43"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/francisokoro/Documents/MerkFabz/src/index.tsx",[],"/Users/francisokoro/Documents/MerkFabz/src/scripts/Firestore.ts",["82"],"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport { _firebase, _user, _firestore, _search, _item, _cart, _role, _order } from './Models';\n\nexport default class Firestore {\n\n    private client:firebase.firestore.Firestore;\n\n    constructor(store:firebase.firestore.Firestore) {\n        this.client = store;\n    }\n\n    async addData(coll:string, data:_user | _item | _cart | _role | _order): Promise<boolean> {\n\n        let added:boolean = false;\n\n        try {\n\n            await this.client.collection(coll).doc(data.id).set(data);\n\n            added = true;\n\n        } catch(err:any) {\n            console.log(err.code, err.message);\n        }\n\n        return added;\n    }\n\n    async getData(info:_firestore): Promise<any> {\n\n        let data:any = null;\n\n        let doc = await this.client.collection(info.coll).doc(info.id).get();\n\n        if(doc.exists)\n            data = doc.data();\n\n        return data;\n    }\n\n    async getDocs(coll:string, search:_search): Promise<any[]> {\n\n        let results:any[] = [];\n\n        try {\n\n            let snap_shot = await this.client.collection(coll).where(search.key, \"==\", search.value).get();\n\n            snap_shot.forEach((doc:any) => {\n                results.push(doc.data());\n            });\n\n        } catch(err:any) {\n            console.log(err.code, err.message);\n        }\n\n        return results;\n    }\n\n    async getAllDocs(coll:string): Promise<any[]> {\n\n        let results:any[] = [];\n\n        try {\n\n            let snap_shot = await this.client.collection(coll).get();\n\n            snap_shot.forEach((doc:any) => {\n                results.push(doc.data());\n            });\n            \n        } catch(err:any) {\n            console.log(err.code, err.message);\n        }\n\n        return results;\n    }\n\n    async removeData(info:_firestore): Promise<boolean> {\n\n        let removed:boolean = false;\n\n        try {\n\n            await this.client.collection(info.coll).doc(info.id).delete();\n\n            removed = true;\n\n        } catch(err:any) {\n            console.log(err.code, err.message);\n        }\n\n        return removed;\n    }\n\n    arrayUnion(info:_firestore, search:_search): boolean {\n\n        let modified:boolean = false;\n\n        try {\n\n            this.client.collection(info.coll).doc(info.id).update({\n                [search.key] : firebase.firestore.FieldValue.arrayUnion(search.value)\n            });\n\n            modified = true;\n\n        } catch(err:any) {\n            console.log(err.code, err.message);\n        }\n\n        return modified;\n    }\n\n    arrayRemove(info:_firestore, search:_search): boolean {\n\n        let modified:boolean = false;\n\n        try {\n\n            this.client.collection(info.coll).doc(info.id).update({\n                [search.key] : firebase.firestore.FieldValue.arrayRemove(search.value)\n            });\n\n            modified = true;\n\n        } catch(err:any) {\n            console.log(err.code, err.message);\n        }\n\n        return modified;\n    }\n\n    incrementItem(info:_firestore, search:_search): boolean {\n\n        let incremented:boolean = false;\n\n        try {\n\n            this.client.collection(info.coll).doc(info.id).update({\n                [search.key] : firebase.firestore.FieldValue.increment(+search.value)\n            });\n\n            incremented = true;\n\n        } catch(err:any) {\n            console.log(err.code, err.message);\n        }\n\n        return incremented;\n    } \n}",["83","84"],"/Users/francisokoro/Documents/MerkFabz/src/components/SideBar/SideBar.tsx",[],["85","86"],"/Users/francisokoro/Documents/MerkFabz/src/components/Register/Email.tsx",[],"/Users/francisokoro/Documents/MerkFabz/src/components/Cart/Cart.tsx",[],"/Users/francisokoro/Documents/MerkFabz/src/components/Profile/Profile.tsx",["87"],"import React, { useEffect, useState } from \"react\";\nimport Auth from \"../../scripts/Auth\";\nimport { _models } from \"../../scripts/Models\";\nimport './Profile.css';\n\nasync function signOut(auth:Auth) {\n\n    let signed:boolean = await auth.signOut();\n\n    if(signed) {\n\n        let profile = document.getElementById(\"profile\");\n        let login = document.getElementById(\"login\");\n\n        if(profile && login) {\n            profile.style.display = \"none\";\n            login.style.display = \"block\"\n        }\n    }\n}\n\nexport default function Profile(props:_models) {\n\n    const [name, setName] = useState(props.auth.get_display_name());\n\n    let changed = setInterval(() => {\n        if(props.auth.get_display_name() !== name) {\n            setName(props.auth.get_display_name());\n            clearInterval(changed);\n        }\n    }, 1000);\n\n    const closeProfile = () => {\n\n        let close = document.getElementById(\"profile\");\n        \n\n        if(close) {\n            close.style.display = \"none\";\n        }\n    }\n\n    return (\n        <div id=\"profile\">\n\n            <button className=\"btn btn-sm btn-danger\" onClick={closeProfile}><i className=\"fa fa-close\"></i></button>\n\n            <h6 id=\"greet\">Hi {name}!</h6>\n\n            <button className=\"btn btn-light profile-btn\">Profile</button>\n            <button className=\"btn btn-light profile-btn\">My Orders</button>\n            <button className=\"btn btn-light profile-btn\" onClick={() => signOut(props.auth)}>Sign Out</button>\n        </div>\n    )\n}","/Users/francisokoro/Documents/MerkFabz/src/scripts/Role.ts",[],"/Users/francisokoro/Documents/MerkFabz/src/App.tsx",["88","89","90","91","92","93"],"import React, { useEffect } from 'react';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport SideBar from './components/SideBar/SideBar';\nimport Login from './components/Login/Login';\nimport Register from './components/Register/Register';\nimport Email from './components/Register/Email';\nimport Profile from './components/Profile/Profile';\nimport Cart from './components/Cart/Cart';\nimport Slider from './components/Slider/Slider.js';\n\nimport { _firebase, _item, _models } from './scripts/Models';\nimport firebase from 'firebase/app';\nimport Auth from './scripts/Auth';\nimport Firestore from './scripts/Firestore';\nimport Item from './scripts/Item';\nimport { useState } from 'react';\n\n//Testing \nconst images = [\n 'https://img.wallpapersafari.com/desktop/1920/1080/98/35/dW6m0X.jpg',\n 'https://img.wallpapersafari.com/desktop/1920/1080/85/15/lpCj75.jpg',\n 'https://img.wallpapersafari.com/desktop/1920/1080/75/54/ZBLizC.jpg',\n 'https://img.wallpapersafari.com/desktop/1920/1080/23/36/per8iz.jpg'\n]\n\nconst config: _firebase = {\n  apiKey: \"AIzaSyDRJbMO8p_kOJY6AH6VPRdMQYe1xjwo3zg\",\n  authDomain: \"merkfabz.firebaseapp.com\",\n  databaseURL: \"https://merkfabz.firebaseio.com\",\n  projectId: \"merkfabz\",\n  storageBucket: \"merkfabz.appspot.com\",\n  messagingSenderId: \"653880877265\",\n  appId: \"1:653880877265:web:90a623a4b5707fa203e5f0\",\n  measurementId: \"G-NTVWNWY41C\"\n};\n\nconst app: firebase.app.App = firebase.initializeApp(config);\n\nasync function getItems(setItems: any, store: Firestore) {\n\n  let items: Item[] = [];\n\n  let db_items: _item[] = await store.getAllDocs(\"ITEMS\");\n\n  for (let i = 0; i < db_items.length; i++)\n    items.push(new Item(db_items[i]));\n\n  setItems(items);\n}\n\nexport default function App() {\n\n  let curr_items: Item[] = [];\n\n  const [items, setItems] = useState(curr_items);\n  const [store, setStore] = useState(new Firestore(app.firestore()));\n  const [auth, setAuth] = useState(new Auth(app.auth(), store));\n\n  //getItems(setItems, store);\n\n  let models: _models = {\n    auth: auth,\n    store: store\n  }\n  // <SideBar />\n  //   <Header {...models} />\n  // <Cart {...models} />\n  //<Login {...models} />\n  // <Register {...models} />\n  // <Email {...models} />\n  //<Profile {...models} />\n\n  return (\n    <>\n      <Slider slides={images} />\n      <SideBar />\n      <Header {...models} />\n      <Cart {...models} />\n      <Login {...models} />\n      <Register {...models} />\n      <Email {...models} />\n      <Profile {...models} />\n    </>\n  )\n\n}","/Users/francisokoro/Documents/MerkFabz/src/components/Login/Login.tsx",["94"],"import React, { useState } from 'react';\nimport './Login.css';\nimport { _user, _models } from '../../scripts/Models';\n\ninterface _login {\n    email: string,\n    password: string,\n\n    setEmail: React.Dispatch<React.SetStateAction<string>>,\n    setPassword: React.Dispatch<React.SetStateAction<string>>,\n    setLoading: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nfunction register() {\n\n    let login = document.getElementById(\"login\");\n    let register = document.getElementById(\"register\");\n\n    if(login && register) {\n        login.style.display = \"none\";\n        register.style.display = \"block\";\n    }\n}\n\nasync function user_login(e:any, props:_models, user_login:_login) {\n\n    e.preventDefault();\n\n    if(user_login.email !== \"\" && user_login.password !== \"\") {\n\n        user_login.setLoading(true);\n\n        if(await props.auth.signIn(user_login.email, user_login.password)) {\n\n            props.auth.set_user();\n\n            await props.auth.set_info();\n\n            let login = document.getElementById(\"login\");\n            let profile = document.getElementById(\"profile\");\n\n            if(login && profile) {\n\n                user_login.setEmail('');\n                user_login.setPassword('');\n                user_login.setLoading(false);\n\n                login.style.display = \"none\";\n                profile.style.display = \"block\"\n            }\n\n        }\n    }\n}\n\nexport default function Login(props:_models) {\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [loading, setLoading] = useState(false);\n\n    const closeLogin = () => {\n\n        let login = document.getElementById(\"login\");\n\n        if(login) {\n            login.style.display = \"none\";\n        }\n    }\n\n    let login:_login = {\n\n        email: email,\n        password: password,\n\n        setEmail: setEmail,\n        setPassword: setPassword,\n        setLoading: setLoading\n    }\n\n    return (\n        <form id=\"login\">\n            <button id=\"create\" className=\"btn btn-light btn-sm\" type=\"button\" onClick={register}>Create Account <i className=\"fa fa-arrow-right\"></i></button>\n            <button className=\"btn btn-danger btn-sm\" onClick={closeLogin}><i className=\"fa fa-close\"></i></button>\n            \n            <input className=\"login-detail form-control\" type=\"email\" placeholder=\"Email\" value={email} onChange={(e:any) => setEmail(e.target.value)} required/>\n            <input className=\"login-detail form-control\" type=\"password\" placeholder=\"Password\" value={password} onChange={(e:any) => setPassword(e.target.value)} onKeyDown={(e:any) => e.key === \"Enter\" && user_login(e, props, login)} required/>\n\n            <button id=\"login-btn\" className=\"btn btn-light\" type=\"submit\" onClick={(e:any) => user_login(e, props, login)} disabled={loading}>{loading ? <i className=\"fa fa-spinner fa-spin\"></i> : \"Login\"}</button>\n        </form>\n    )\n}","/Users/francisokoro/Documents/MerkFabz/src/components/Register/Register.tsx",[],"/Users/francisokoro/Documents/MerkFabz/src/scripts/Auth.ts",["95","96"],"import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport Firestore from './Firestore';\nimport Item from './Item';\nimport { _cart, _firebase, _firestore, _item, _order, _role, _search } from './Models';\nimport Order from './Order';\nimport Role from './Role';\n\nexport default class Auth {\n\n    private client:firebase.auth.Auth;\n\n    private shop_cart:Item[];\n    private orders:Order[];\n    private user_role:Role;\n\n    private store:Firestore;\n\n    private name:string;\n    private id:string;\n    private email:string;\n    private photo_url:string;\n    private verified:boolean;\n\n    constructor(auth:firebase.auth.Auth, store:Firestore) {\n\n        this.client = auth;\n\n        this.store = store;\n        this.shop_cart = [];\n        this.orders = [];\n        this.user_role = new Role();\n\n        this.name = \"\";\n        this.id = \"\";\n        this.email = \"\";\n        this.photo_url = \"\";\n        this.verified = false;\n    }\n\n    async signUp(email:string, password:string): Promise<boolean> {\n\n        let added:boolean = false;\n\n        try {\n\n            await this.client.createUserWithEmailAndPassword(email, password);\n\n            added = true;\n\n        } catch(err:any) {\n            console.log(err.code, err.message);\n        }\n\n        return added;\n    }\n\n    isAuth(): boolean {\n        \n        let auth:boolean = false;\n\n        if(this.client.currentUser != null) \n            auth = true;\n\n        return auth;\n    }\n\n    isVerified(): boolean {\n        return this.verified;\n    }\n\n    async signIn(email:string, password:string): Promise<boolean> {\n\n        let exist:boolean = false;\n\n        try {\n\n            await this.client.signInWithEmailAndPassword(email, password);\n\n            exist = true;\n\n        } catch(err:any) {\n            console.log(err.code, err.message);\n        }\n\n        return exist;\n    }\n\n\n    async updateProfile(displayName:string, photoURL:string): Promise<boolean> {\n\n        let changed:boolean = false;\n\n        if(this.client.currentUser) {\n\n            try {\n\n                await this.client.currentUser.updateProfile({ displayName, photoURL });\n    \n                changed = true;\n    \n            } catch(err:any) {\n                console.log(err.code, err.message);\n            }\n        }\n\n        return changed;\n    }\n\n    async updateEmail(email:string): Promise<boolean> {\n\n        let updated:boolean = false;\n\n        if(this.client.currentUser) {\n\n            try {\n\n                await this.client.currentUser.updateEmail(email);\n    \n                updated = true;\n    \n            } catch(err:any) {\n                console.log(err.code, err.message);\n            }\n        }\n\n        return updated;\n    }\n\n    async sendEmailVerification(): Promise<boolean> {\n\n        let sent:boolean = false;\n\n        if(this.client.currentUser) {\n\n            try {\n\n                await this.client.currentUser.sendEmailVerification();\n    \n                sent = true;\n    \n            } catch(err:any) {\n                console.log(err.code, err.message);\n            }\n        }\n\n        return sent;\n    }\n\n    async updatePassword(new_password:string): Promise<boolean> {\n\n        let updated:boolean = false;\n\n        if(this.client.currentUser) {\n\n            try {\n\n                await this.client.currentUser.updatePassword(new_password);\n    \n                updated = true;\n    \n            } catch(err:any) {\n                console.log(err.code, err.message);\n            }\n        }\n\n        return updated;\n    }\n\n    async sendResetPasswordEmail(email:string): Promise<boolean> {\n\n        let sent:boolean = false;\n\n        try {\n\n            await this.client.sendPasswordResetEmail(email);\n\n            sent = true;\n\n        } catch(err:any) {\n            console.log(err.code, err.message);\n        }\n\n        return sent;\n    }\n\n    async deleteUser(): Promise<boolean> {\n\n        let deleted:boolean = false;\n\n        if(this.client.currentUser) {\n\n            try {\n\n                await this.client.currentUser.delete();\n    \n                deleted = true;\n    \n            } catch(err:any) {\n                console.log(err.code, err.message);\n            }\n        }\n\n        return deleted;\n    }\n\n    async signOut(): Promise<boolean> {\n\n        let signedOut:boolean = false;\n\n        try {\n\n            await this.client.signOut();\n\n            signedOut = true;\n\n        } catch(err:any) {\n            console.log(err.code, err.message);\n        }\n\n        return signedOut;\n    }\n\n    add_to_cart(item:Item) {\n        this.shop_cart.push(item);\n    }\n\n    remove_frm_cart(item:Item) {\n\n        let idx:number = this.shop_cart.findIndex((curr_item) => curr_item.get_id() == item.get_id());\n\n        this.shop_cart.splice(idx, 1);\n    }\n\n    add_order(order:Order) {\n        this.orders.push(order);\n    }\n\n    get_id(): string {\n        return this.id;\n    }\n\n    get_email(): string {\n        return this.email;\n    }\n\n    get_display_name(): string {\n        return this.name;\n    }\n\n    get_photo(): string {\n        return this.photo_url;\n    }\n\n    get_role(): Role {\n        return this.user_role;\n    }\n\n    get_cart(): Item[] {\n        return this.shop_cart;\n    }\n\n    get_orders(): Order[] {\n        return this.orders;\n    }\n\n    async set_shop_cart() {\n\n        let info:_firestore = {\n            coll: \"CARTS\",\n            id: this.id\n        }\n\n        let cart_info:_cart = await this.store.getData(info);\n\n        if(cart_info != null) {\n\n            let item_ids:string[] = cart_info.item_ids;\n\n            for(let i = 0; i < item_ids.length; i++) {\n\n                info = {\n                    id : item_ids[i],\n                    coll: \"ITEMS\"\n                }\n\n                let item:_item = await this.store.getData(info);\n\n                if(item != null)\n                    this.shop_cart.push(new Item(item));\n            }\n        }\n    }\n\n    async set_role() {\n\n        let info:_firestore = {\n            coll: \"ROLES\",\n            id: this.id\n        }\n\n        let user_role:_role = await this.store.getData(info);\n\n        this.user_role.set_role(user_role);\n    }\n\n    async set_orders() {\n\n        let search:_search = {\n            key: 'user_id',\n            value: this.id\n        }\n\n        let orders:_order[] = await this.store.getDocs(\"ORDERS\", search);\n\n        for(let i = 0; i < orders.length; i++) \n            this.orders.push(new Order(orders[i]));\n    }\n\n    set_user() {\n\n        if(this.client.currentUser) {\n\n            this.id = this.client.currentUser.uid\n\n            if(this.client.currentUser.displayName)\n                this.name = this.client.currentUser.displayName\n\n            if(this.client.currentUser.email)\n                this.email = this.client.currentUser.email;\n\n            if(this.client.currentUser.photoURL)\n                this.photo_url = this.client.currentUser.photoURL\n\n            this.verified = this.client.currentUser.emailVerified;\n        }\n    }\n\n    async set_info() {\n\n        if(this.client.currentUser) {\n\n            await this.set_role();\n            await this.set_shop_cart();\n            await this.set_orders();\n        }\n    }\n}","/Users/francisokoro/Documents/MerkFabz/src/scripts/Order.ts",[],"/Users/francisokoro/Documents/MerkFabz/src/scripts/Item.ts",[],"/Users/francisokoro/Documents/MerkFabz/src/reportWebVitals.ts",[],"/Users/francisokoro/Documents/MerkFabz/src/components/Slider/Slider.js",["97","98","99"],"import React, { useState } from 'react';\nimport { css, jsx } from '@emotion/react';\nimport SliderObject from './SliderObject.js';\nimport SlideImg from './SlideImg.js';\n\nimport './Slider.css';\n\nconst Slider = props => {\n    const getWidth = () => window.innerWidth\n\n    const [state, setState] = useState({\n        translate: 0,\n        transition: 0.45\n    })\n\n    const { translate, transition } = state\n\n    return (\n        <div >\n            <SliderObject\n                translate={translate}\n                transition={transition}\n                width={getWidth()*props.slides.length}\n            >\n                {\n                    props.slides.map(slide => (\n                        <SlideImg  key ={slide} content={slide}/>\n                    ))\n                }\n            </SliderObject>\n        </div>\n    )\n}\n\nexport default Slider\n","/Users/francisokoro/Documents/MerkFabz/src/components/Slider/SliderObject.js",["100"],"/Users/francisokoro/Documents/MerkFabz/src/components/Slider/SlideImg.js",["101","102"],"/Users/francisokoro/Documents/MerkFabz/src/components/Header/Header.tsx",["103"],{"ruleId":"104","severity":1,"message":"105","line":3,"column":10,"nodeType":"106","messageId":"107","endLine":3,"endColumn":19},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"108","replacedBy":"112"},{"ruleId":"110","replacedBy":"113"},{"ruleId":"104","severity":1,"message":"114","line":1,"column":17,"nodeType":"106","messageId":"107","endLine":1,"endColumn":26},{"ruleId":"104","severity":1,"message":"114","line":1,"column":17,"nodeType":"106","messageId":"107","endLine":1,"endColumn":26},{"ruleId":"104","severity":1,"message":"115","line":40,"column":16,"nodeType":"106","messageId":"107","endLine":40,"endColumn":24},{"ruleId":"104","severity":1,"message":"116","line":56,"column":10,"nodeType":"106","messageId":"107","endLine":56,"endColumn":15},{"ruleId":"104","severity":1,"message":"117","line":56,"column":17,"nodeType":"106","messageId":"107","endLine":56,"endColumn":25},{"ruleId":"104","severity":1,"message":"118","line":57,"column":17,"nodeType":"106","messageId":"107","endLine":57,"endColumn":25},{"ruleId":"104","severity":1,"message":"119","line":58,"column":16,"nodeType":"106","messageId":"107","endLine":58,"endColumn":23},{"ruleId":"104","severity":1,"message":"120","line":3,"column":10,"nodeType":"106","messageId":"107","endLine":3,"endColumn":15},{"ruleId":"104","severity":1,"message":"105","line":5,"column":17,"nodeType":"106","messageId":"107","endLine":5,"endColumn":26},{"ruleId":"121","severity":1,"message":"122","line":230,"column":85,"nodeType":"123","messageId":"124","endLine":230,"endColumn":87},{"ruleId":"125","severity":1,"message":"126","line":2,"column":10,"nodeType":"106","messageId":"107","endLine":2,"endColumn":13},{"ruleId":"125","severity":1,"message":"127","line":2,"column":15,"nodeType":"106","messageId":"107","endLine":2,"endColumn":18},{"ruleId":"125","severity":1,"message":"128","line":11,"column":19,"nodeType":"106","messageId":"107","endLine":11,"endColumn":27},{"ruleId":"125","severity":1,"message":"129","line":1,"column":8,"nodeType":"106","messageId":"107","endLine":1,"endColumn":13},{"ruleId":"125","severity":1,"message":"130","line":1,"column":17,"nodeType":"106","messageId":"107","endLine":1,"endColumn":25},{"ruleId":"131","severity":1,"message":"132","line":5,"column":5,"nodeType":"133","endLine":5,"endColumn":25},{"ruleId":"131","severity":1,"message":"132","line":121,"column":13,"nodeType":"133","endLine":121,"endColumn":57},"@typescript-eslint/no-unused-vars","'_firebase' is defined but never used.","Identifier","unusedVar","no-native-reassign",["134"],"no-negated-in-lhs",["135"],["134"],["135"],"'useEffect' is defined but never used.","'getItems' is defined but never used.","'items' is assigned a value but never used.","'setItems' is assigned a value but never used.","'setStore' is assigned a value but never used.","'setAuth' is assigned a value but never used.","'_user' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'css' is defined but never used.","'jsx' is defined but never used.","'setState' is assigned a value but never used.","'React' is defined but never used.","'useState' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]