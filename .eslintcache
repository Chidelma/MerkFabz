[{"/media/Chidelma/WINDOWS OS/Users/ayode/Dropbox/myProjects/MERKFABZ/src/App.tsx":"1","/media/Chidelma/WINDOWS OS/Users/ayode/Dropbox/myProjects/MERKFABZ/src/index.tsx":"2","/media/Chidelma/WINDOWS OS/Users/ayode/Dropbox/myProjects/MERKFABZ/src/scripts/Item.ts":"3","/media/Chidelma/WINDOWS OS/Users/ayode/Dropbox/myProjects/MERKFABZ/src/scripts/Firestore.ts":"4","/media/Chidelma/WINDOWS OS/Users/ayode/Dropbox/myProjects/MERKFABZ/src/scripts/Auth.ts":"5","/media/Chidelma/WINDOWS OS/Users/ayode/Dropbox/myProjects/MERKFABZ/src/components/Header/Header.tsx":"6","/media/Chidelma/WINDOWS OS/Users/ayode/Dropbox/myProjects/MERKFABZ/src/components/SideBar/SideBar.tsx":"7","/media/Chidelma/WINDOWS OS/Users/ayode/Dropbox/myProjects/MERKFABZ/src/components/Profile/Profile.tsx":"8","/media/Chidelma/WINDOWS OS/Users/ayode/Dropbox/myProjects/MERKFABZ/src/components/Register/Email.tsx":"9","/media/Chidelma/WINDOWS OS/Users/ayode/Dropbox/myProjects/MERKFABZ/src/components/Register/Register.tsx":"10","/media/Chidelma/WINDOWS OS/Users/ayode/Dropbox/myProjects/MERKFABZ/src/components/Cart/Cart.tsx":"11","/media/Chidelma/WINDOWS OS/Users/ayode/Dropbox/myProjects/MERKFABZ/src/scripts/Role.ts":"12","/media/Chidelma/WINDOWS OS/Users/ayode/Dropbox/myProjects/MERKFABZ/src/components/Item/Item.tsx":"13","/media/Chidelma/WINDOWS OS/Users/ayode/Dropbox/myProjects/MERKFABZ/src/components/Login/Login.tsx":"14","/media/Chidelma/WINDOWS OS/Users/ayode/Dropbox/myProjects/MERKFABZ/src/components/Slider/Slider.tsx":"15"},{"size":1983,"mtime":1606560349401,"results":"16","hashOfConfig":"17"},{"size":501,"mtime":1606542508821,"results":"18","hashOfConfig":"17"},{"size":1121,"mtime":1606195957287,"results":"19","hashOfConfig":"17"},{"size":3439,"mtime":1606380731849,"results":"20","hashOfConfig":"17"},{"size":7150,"mtime":1606404794169,"results":"21","hashOfConfig":"17"},{"size":3581,"mtime":1606499495001,"results":"22","hashOfConfig":"17"},{"size":152,"mtime":1606243264035,"results":"23","hashOfConfig":"17"},{"size":1509,"mtime":1606399930754,"results":"24","hashOfConfig":"17"},{"size":1070,"mtime":1606461552485,"results":"25","hashOfConfig":"17"},{"size":5698,"mtime":1606461451612,"results":"26","hashOfConfig":"17"},{"size":268,"mtime":1606330443936,"results":"27","hashOfConfig":"17"},{"size":1158,"mtime":1606156047370,"results":"28","hashOfConfig":"17"},{"size":364,"mtime":1606380979643,"results":"29","hashOfConfig":"17"},{"size":2901,"mtime":1606461476901,"results":"30","hashOfConfig":"17"},{"size":951,"mtime":1606546978885,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1r84ekz",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/media/Chidelma/WINDOWS OS/Users/ayode/Dropbox/myProjects/MERKFABZ/src/App.tsx",["69","70","71","72"],"/media/Chidelma/WINDOWS OS/Users/ayode/Dropbox/myProjects/MERKFABZ/src/index.tsx",[],["73","74"],"/media/Chidelma/WINDOWS OS/Users/ayode/Dropbox/myProjects/MERKFABZ/src/scripts/Item.ts",[],"/media/Chidelma/WINDOWS OS/Users/ayode/Dropbox/myProjects/MERKFABZ/src/scripts/Firestore.ts",["75"],"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport { _firebase, _user, _firestore, _search, _item, _cart, _role, _order } from './Models';\n\nexport default class Firestore {\n\n    private client:firebase.firestore.Firestore;\n\n    constructor(store:firebase.firestore.Firestore) {\n        this.client = store;\n    }\n\n    async addData(coll:string, data:_user | _item | _cart | _role | _order): Promise<boolean> {\n\n        let added:boolean = false;\n\n        try {\n\n            await this.client.collection(coll).doc(data.id).set(data);\n\n            added = true;\n\n        } catch(err:any) {\n            console.log(err.code, err.message);\n        }\n\n        return added;\n    }\n\n    async getData(info:_firestore): Promise<any> {\n\n        let data:any = null;\n\n        let doc = await this.client.collection(info.coll).doc(info.id).get();\n\n        if(doc.exists)\n            data = doc.data();\n\n        return data;\n    }\n\n    async getDocs(coll:string, search:_search): Promise<any[]> {\n\n        let results:any[] = [];\n\n        try {\n\n            let snap_shot = await this.client.collection(coll).where(search.key, \"==\", search.value).get();\n\n            snap_shot.forEach((doc:any) => {\n                results.push(doc.data());\n            });\n\n        } catch(err:any) {\n            console.log(err.code, err.message);\n        }\n\n        return results;\n    }\n\n    async getAllDocs(coll:string): Promise<any[]> {\n\n        let results:any[] = [];\n\n        try {\n\n            let snap_shot = await this.client.collection(coll).get();\n\n            snap_shot.forEach((doc:any) => {\n                results.push(doc.data());\n            });\n            \n        } catch(err:any) {\n            console.log(err.code, err.message);\n        }\n\n        return results;\n    }\n\n    async removeData(info:_firestore): Promise<boolean> {\n\n        let removed:boolean = false;\n\n        try {\n\n            await this.client.collection(info.coll).doc(info.id).delete();\n\n            removed = true;\n\n        } catch(err:any) {\n            console.log(err.code, err.message);\n        }\n\n        return removed;\n    }\n\n    arrayUnion(info:_firestore, search:_search): boolean {\n\n        let modified:boolean = false;\n\n        try {\n\n            this.client.collection(info.coll).doc(info.id).update({\n                [search.key] : firebase.firestore.FieldValue.arrayUnion(search.value)\n            });\n\n            modified = true;\n\n        } catch(err:any) {\n            console.log(err.code, err.message);\n        }\n\n        return modified;\n    }\n\n    arrayRemove(info:_firestore, search:_search): boolean {\n\n        let modified:boolean = false;\n\n        try {\n\n            this.client.collection(info.coll).doc(info.id).update({\n                [search.key] : firebase.firestore.FieldValue.arrayRemove(search.value)\n            });\n\n            modified = true;\n\n        } catch(err:any) {\n            console.log(err.code, err.message);\n        }\n\n        return modified;\n    }\n\n    incrementItem(info:_firestore, search:_search): boolean {\n\n        let incremented:boolean = false;\n\n        try {\n\n            this.client.collection(info.coll).doc(info.id).update({\n                [search.key] : firebase.firestore.FieldValue.increment(+search.value)\n            });\n\n            incremented = true;\n\n        } catch(err:any) {\n            console.log(err.code, err.message);\n        }\n\n        return incremented;\n    } \n}","/media/Chidelma/WINDOWS OS/Users/ayode/Dropbox/myProjects/MERKFABZ/src/scripts/Auth.ts",["76","77"],"import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport Firestore from './Firestore';\nimport Item from './Item';\nimport { _cart, _firebase, _firestore, _item, _order, _role, _search } from './Models';\nimport Order from './Order';\nimport Role from './Role';\n\nexport default class Auth {\n\n    private client:firebase.auth.Auth;\n\n    private shop_cart:Item[];\n    private orders:Order[];\n    private user_role:Role;\n\n    private store:Firestore;\n\n    private name:string;\n    private id:string;\n    private email:string;\n    private photo_url:string;\n    private verified:boolean;\n\n    constructor(auth:firebase.auth.Auth, store:Firestore) {\n\n        this.client = auth;\n\n        this.store = store;\n        this.shop_cart = [];\n        this.orders = [];\n        this.user_role = new Role();\n\n        this.name = \"\";\n        this.id = \"\";\n        this.email = \"\";\n        this.photo_url = \"\";\n        this.verified = false;\n    }\n\n    async signUp(email:string, password:string): Promise<boolean> {\n\n        let added:boolean = false;\n\n        try {\n\n            await this.client.createUserWithEmailAndPassword(email, password);\n\n            added = true;\n\n        } catch(err:any) {\n            console.log(err.code, err.message);\n        }\n\n        return added;\n    }\n\n    isAuth(): boolean {\n        \n        let auth:boolean = false;\n\n        if(this.client.currentUser != null) \n            auth = true;\n\n        return auth;\n    }\n\n    isVerified(): boolean {\n        return this.verified;\n    }\n\n    async signIn(email:string, password:string): Promise<boolean> {\n\n        let exist:boolean = false;\n\n        try {\n\n            await this.client.signInWithEmailAndPassword(email, password);\n\n            exist = true;\n\n        } catch(err:any) {\n            console.log(err.code, err.message);\n        }\n\n        return exist;\n    }\n\n\n    async updateProfile(displayName:string, photoURL:string): Promise<boolean> {\n\n        let changed:boolean = false;\n\n        if(this.client.currentUser) {\n\n            try {\n\n                await this.client.currentUser.updateProfile({ displayName, photoURL });\n    \n                changed = true;\n    \n            } catch(err:any) {\n                console.log(err.code, err.message);\n            }\n        }\n\n        return changed;\n    }\n\n    async updateEmail(email:string): Promise<boolean> {\n\n        let updated:boolean = false;\n\n        if(this.client.currentUser) {\n\n            try {\n\n                await this.client.currentUser.updateEmail(email);\n    \n                updated = true;\n    \n            } catch(err:any) {\n                console.log(err.code, err.message);\n            }\n        }\n\n        return updated;\n    }\n\n    async sendEmailVerification(): Promise<boolean> {\n\n        let sent:boolean = false;\n\n        if(this.client.currentUser) {\n\n            try {\n\n                await this.client.currentUser.sendEmailVerification();\n    \n                sent = true;\n    \n            } catch(err:any) {\n                console.log(err.code, err.message);\n            }\n        }\n\n        return sent;\n    }\n\n    async updatePassword(new_password:string): Promise<boolean> {\n\n        let updated:boolean = false;\n\n        if(this.client.currentUser) {\n\n            try {\n\n                await this.client.currentUser.updatePassword(new_password);\n    \n                updated = true;\n    \n            } catch(err:any) {\n                console.log(err.code, err.message);\n            }\n        }\n\n        return updated;\n    }\n\n    async sendResetPasswordEmail(email:string): Promise<boolean> {\n\n        let sent:boolean = false;\n\n        try {\n\n            await this.client.sendPasswordResetEmail(email);\n\n            sent = true;\n\n        } catch(err:any) {\n            console.log(err.code, err.message);\n        }\n\n        return sent;\n    }\n\n    async deleteUser(): Promise<boolean> {\n\n        let deleted:boolean = false;\n\n        if(this.client.currentUser) {\n\n            try {\n\n                await this.client.currentUser.delete();\n    \n                deleted = true;\n    \n            } catch(err:any) {\n                console.log(err.code, err.message);\n            }\n        }\n\n        return deleted;\n    }\n\n    async signOut(): Promise<boolean> {\n\n        let signedOut:boolean = false;\n\n        try {\n\n            await this.client.signOut();\n\n            signedOut = true;\n\n        } catch(err:any) {\n            console.log(err.code, err.message);\n        }\n\n        return signedOut;\n    }\n\n    add_to_cart(item:Item) {\n        this.shop_cart.push(item);\n    }\n\n    remove_frm_cart(item:Item) {\n\n        let idx:number = this.shop_cart.findIndex((curr_item) => curr_item.get_id() == item.get_id());\n\n        this.shop_cart.splice(idx, 1);\n    }\n\n    add_order(order:Order) {\n        this.orders.push(order);\n    }\n\n    get_id(): string {\n        return this.id;\n    }\n\n    get_email(): string {\n        return this.email;\n    }\n\n    get_display_name(): string {\n        return this.name;\n    }\n\n    get_photo(): string {\n        return this.photo_url;\n    }\n\n    get_role(): Role {\n        return this.user_role;\n    }\n\n    get_cart(): Item[] {\n        return this.shop_cart;\n    }\n\n    get_orders(): Order[] {\n        return this.orders;\n    }\n\n    async set_shop_cart() {\n\n        let info:_firestore = {\n            coll: \"CARTS\",\n            id: this.id\n        }\n\n        let cart_info:_cart = await this.store.getData(info);\n\n        if(cart_info != null) {\n\n            let item_ids:string[] = cart_info.item_ids;\n\n            for(let i = 0; i < item_ids.length; i++) {\n\n                info = {\n                    id : item_ids[i],\n                    coll: \"ITEMS\"\n                }\n\n                let item:_item = await this.store.getData(info);\n\n                if(item != null)\n                    this.shop_cart.push(new Item(item));\n            }\n        }\n    }\n\n    async set_role() {\n\n        let info:_firestore = {\n            coll: \"ROLES\",\n            id: this.id\n        }\n\n        let user_role:_role = await this.store.getData(info);\n\n        this.user_role.set_role(user_role);\n    }\n\n    async set_orders() {\n\n        let search:_search = {\n            key: 'user_id',\n            value: this.id\n        }\n\n        let orders:_order[] = await this.store.getDocs(\"ORDERS\", search);\n\n        for(let i = 0; i < orders.length; i++) \n            this.orders.push(new Order(orders[i]));\n    }\n\n    set_user() {\n\n        if(this.client.currentUser) {\n\n            this.id = this.client.currentUser.uid\n\n            if(this.client.currentUser.displayName)\n                this.name = this.client.currentUser.displayName\n\n            if(this.client.currentUser.email)\n                this.email = this.client.currentUser.email;\n\n            if(this.client.currentUser.photoURL)\n                this.photo_url = this.client.currentUser.photoURL\n\n            this.verified = this.client.currentUser.emailVerified;\n        }\n    }\n\n    async set_info() {\n\n        if(this.client.currentUser) {\n\n            await this.set_role();\n            await this.set_shop_cart();\n            await this.set_orders();\n        }\n    }\n}","/media/Chidelma/WINDOWS OS/Users/ayode/Dropbox/myProjects/MERKFABZ/src/components/Header/Header.tsx",["78"],"import React, { useState } from 'react';\nimport { _models } from '../../scripts/Models';\nimport './Header.css';\n\nfunction toggleSide(view:boolean, setView:React.Dispatch<React.SetStateAction<boolean>>) {\n\n    let sideBar = document.getElementById(\"side-bar\");\n    let head = document.getElementById(\"head-o\");\n\n    if(sideBar && head && !view) {\n        sideBar.style.marginLeft = \"0px\";\n        setView(true);\n    } \n\n    if(sideBar && head && view) {\n        sideBar.style.marginLeft = \"-20%\";\n        setView(false);\n    }\n}\n\nfunction toggleSearch(view:boolean, setView:React.Dispatch<React.SetStateAction<boolean>>) {\n\n    let searchInput = document.getElementById(\"search-input\");\n    let searchBtn = document.getElementById(\"search-btn\");\n\n    if(searchBtn && searchInput && !view) {\n        searchBtn.style.display = \"none\";\n        searchInput.style.display = \"block\";\n        setView(true);\n    }\n\n    if(searchBtn && searchInput && view) {\n        searchBtn.style.display = \"block\";\n        searchInput.style.display = \"none\";\n        setView(false);\n    }\n}\n\nfunction toggleCart(view:boolean, setView:React.Dispatch<React.SetStateAction<boolean>>) {\n\n    let cart = document.getElementById(\"cart\");\n\n    let profile = document.getElementById(\"profile\");\n    let login = document.getElementById(\"login\");\n    let register = document.getElementById(\"register\");\n    let email = document.getElementById(\"email-verify\");\n\n    if(profile) \n        profile.style.display = \"none\";\n\n    if(login)\n        login.style.display = \"none\";\n\n    if(register)\n        register.style.display = \"none\";\n\n    if(email)\n        email.style.display = \"none\";\n\n    if(cart && !view) {\n        cart.style.marginRight = \"0px\";\n        setView(true);\n    } \n\n    if(cart && view) {\n        cart.style.marginRight = \"-20%\";\n        setView(false);\n    }\n}\n\nfunction userInfo(props:_models) {\n\n    let cart = document.getElementById(\"cart\");\n\n    if(cart)\n        cart.style.marginRight = \"-20%\";\n\n    if(!props.auth.isAuth()) {\n\n        let login = document.getElementById(\"login\");\n\n        if(login)\n            login.style.display = \"block\";\n\n    } else if(props.auth.isAuth() && !props.auth.isVerified()) {\n\n        let verify = document.getElementById(\"email-verify\");\n\n        if(verify)\n            verify.style.display = \"block\";\n\n    } else if(props.auth.isAuth() && props.auth.isVerified()) {\n\n        let profile = document.getElementById(\"profile\");\n\n        if(profile)\n            profile.style.display = \"block\";\n    }\n}\n\nexport default function Header(props:_models) {\n\n    const [viewMenu, setViewMenu] = useState(false);\n\n    const [viewSearch, setViewSearch] = useState(false);\n\n    const [viewCart, setViewCart] = useState(false);\n\n    return (\n        <div id=\"head-o\">\n\n            <button className=\"btn btn-light btn-lg menu-bar\" onClick={() => toggleSide(viewMenu, setViewMenu)}><i className=\"fa fa-navicon\"></i></button>\n\n            <img className=\"logo\" src=\"./logo200.png\" />\n\n            <button className=\"btn btn-light btn-lg cart\" onClick={() => toggleCart(viewCart, setViewCart)}><i className=\"fa fa-shopping-cart\"></i></button>\n\n            <button className=\"btn btn-light btn-lg user\" onClick={() => userInfo(props)}><i className=\"fa fa-user\"></i></button>\n\n            <button id=\"search-btn\" className=\"btn btn-light btn-lg search\" onClick={() => toggleSearch(viewSearch, setViewSearch)}><i className=\"fa fa-search\"></i></button>\n\n            <input id=\"search-input\" className=\"form-control form-control-lg\" placeholder=\"Search\" />\n        </div>\n    )\n}",["79","80"],"/media/Chidelma/WINDOWS OS/Users/ayode/Dropbox/myProjects/MERKFABZ/src/components/SideBar/SideBar.tsx",[],"/media/Chidelma/WINDOWS OS/Users/ayode/Dropbox/myProjects/MERKFABZ/src/components/Profile/Profile.tsx",["81"],"import React, { useEffect, useState } from \"react\";\nimport Auth from \"../../scripts/Auth\";\nimport { _models } from \"../../scripts/Models\";\nimport './Profile.css';\n\nasync function signOut(auth:Auth) {\n\n    let signed:boolean = await auth.signOut();\n\n    if(signed) {\n\n        let profile = document.getElementById(\"profile\");\n        let login = document.getElementById(\"login\");\n\n        if(profile && login) {\n            profile.style.display = \"none\";\n            login.style.display = \"block\"\n        }\n    }\n}\n\nexport default function Profile(props:_models) {\n\n    const [name, setName] = useState(props.auth.get_display_name());\n\n    let changed = setInterval(() => {\n        if(props.auth.get_display_name() !== name) {\n            setName(props.auth.get_display_name());\n            clearInterval(changed);\n        }\n    }, 1000);\n\n    const closeProfile = () => {\n\n        let close = document.getElementById(\"profile\");\n        \n\n        if(close) {\n            close.style.display = \"none\";\n        }\n    }\n\n    return (\n        <div id=\"profile\">\n\n            <button className=\"btn btn-sm btn-danger\" onClick={closeProfile}><i className=\"fa fa-close\"></i></button>\n\n            <h6 id=\"greet\">Hi {name}!</h6>\n\n            <button className=\"btn btn-light profile-btn\">Profile</button>\n            <button className=\"btn btn-light profile-btn\">My Orders</button>\n            <button className=\"btn btn-light profile-btn\" onClick={() => signOut(props.auth)}>Sign Out</button>\n        </div>\n    )\n}","/media/Chidelma/WINDOWS OS/Users/ayode/Dropbox/myProjects/MERKFABZ/src/components/Register/Email.tsx",[],"/media/Chidelma/WINDOWS OS/Users/ayode/Dropbox/myProjects/MERKFABZ/src/components/Register/Register.tsx",[],"/media/Chidelma/WINDOWS OS/Users/ayode/Dropbox/myProjects/MERKFABZ/src/components/Cart/Cart.tsx",[],"/media/Chidelma/WINDOWS OS/Users/ayode/Dropbox/myProjects/MERKFABZ/src/scripts/Role.ts",[],"/media/Chidelma/WINDOWS OS/Users/ayode/Dropbox/myProjects/MERKFABZ/src/components/Item/Item.tsx",[],"/media/Chidelma/WINDOWS OS/Users/ayode/Dropbox/myProjects/MERKFABZ/src/components/Login/Login.tsx",["82"],"import React, { useState } from 'react';\nimport './Login.css';\nimport { _user, _models } from '../../scripts/Models';\n\ninterface _login {\n    email: string,\n    password: string,\n\n    setEmail: React.Dispatch<React.SetStateAction<string>>,\n    setPassword: React.Dispatch<React.SetStateAction<string>>,\n    setLoading: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nfunction register() {\n\n    let login = document.getElementById(\"login\");\n    let register = document.getElementById(\"register\");\n\n    if(login && register) {\n        login.style.display = \"none\";\n        register.style.display = \"block\";\n    }\n}\n\nasync function user_login(e:Event, props:_models, user_login:_login) {\n\n    e.preventDefault();\n\n    if(user_login.email !== \"\" && user_login.password !== \"\") {\n\n        user_login.setLoading(true);\n\n        if(await props.auth.signIn(user_login.email, user_login.password)) {\n\n            props.auth.set_user();\n\n            await props.auth.set_info();\n\n            let login = document.getElementById(\"login\");\n            let profile = document.getElementById(\"profile\");\n\n            if(login && profile) {\n\n                user_login.setEmail('');\n                user_login.setPassword('');\n                user_login.setLoading(false);\n\n                login.style.display = \"none\";\n                profile.style.display = \"block\"\n            }\n\n        }\n    }\n}\n\nexport default function Login(props:_models) {\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [loading, setLoading] = useState(false);\n\n    const closeLogin = () => {\n\n        let login = document.getElementById(\"login\");\n\n        if(login) {\n            login.style.display = \"none\";\n        }\n    }\n\n    let login:_login = {\n\n        email: email,\n        password: password,\n\n        setEmail: setEmail,\n        setPassword: setPassword,\n        setLoading: setLoading\n    }\n\n    return (\n        <form id=\"login\">\n            <button id=\"create\" className=\"btn btn-light btn-sm\" type=\"button\" onClick={register}>Create Account <i className=\"fa fa-arrow-right\"></i></button>\n            <button className=\"btn btn-danger btn-sm\" onClick={closeLogin}><i className=\"fa fa-close\"></i></button>\n            \n            <input className=\"login-detail form-control\" type=\"email\" placeholder=\"Email\" value={email} onChange={(e:any) => setEmail(e.target.value)} required/>\n            <input className=\"login-detail form-control\" type=\"password\" placeholder=\"Password\" value={password} onChange={(e:any) => setPassword(e.target.value)} onKeyDown={(e:any) => e.key === \"Enter\" && user_login(e, props, login)} required/>\n\n            <button id=\"login-btn\" className=\"btn btn-light\" type=\"submit\" onClick={(e:any) => user_login(e, props, login)} disabled={loading}>{loading ? <i className=\"fa fa-spinner fa-spin\"></i> : \"Login\"}</button>\n        </form>\n    )\n}","/media/Chidelma/WINDOWS OS/Users/ayode/Dropbox/myProjects/MERKFABZ/src/components/Slider/Slider.tsx",["83"],{"ruleId":"84","severity":1,"message":"85","line":47,"column":10,"nodeType":"86","messageId":"87","endLine":47,"endColumn":15},{"ruleId":"84","severity":1,"message":"88","line":48,"column":17,"nodeType":"86","messageId":"87","endLine":48,"endColumn":25},{"ruleId":"84","severity":1,"message":"89","line":49,"column":16,"nodeType":"86","messageId":"87","endLine":49,"endColumn":23},{"ruleId":"90","severity":1,"message":"91","line":53,"column":6,"nodeType":"92","endLine":53,"endColumn":8,"suggestions":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"84","severity":1,"message":"98","line":3,"column":10,"nodeType":"86","messageId":"87","endLine":3,"endColumn":19},{"ruleId":"84","severity":1,"message":"98","line":5,"column":17,"nodeType":"86","messageId":"87","endLine":5,"endColumn":26},{"ruleId":"99","severity":1,"message":"100","line":230,"column":85,"nodeType":"101","messageId":"102","endLine":230,"endColumn":87},{"ruleId":"103","severity":1,"message":"104","line":114,"column":13,"nodeType":"105","endLine":114,"endColumn":57},{"ruleId":"94","replacedBy":"106"},{"ruleId":"96","replacedBy":"107"},{"ruleId":"84","severity":1,"message":"108","line":1,"column":17,"nodeType":"86","messageId":"87","endLine":1,"endColumn":26},{"ruleId":"84","severity":1,"message":"109","line":3,"column":10,"nodeType":"86","messageId":"87","endLine":3,"endColumn":15},{"ruleId":"110","severity":1,"message":"111","line":20,"column":38,"nodeType":"112","messageId":"113","endLine":20,"endColumn":40},"@typescript-eslint/no-unused-vars","'items' is assigned a value but never used.","Identifier","unusedVar","'setStore' is assigned a value but never used.","'setAuth' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'store'. Either include it or remove the dependency array.","ArrayExpression",["114"],"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"'_firebase' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["115"],["116"],"'useEffect' is defined but never used.","'_user' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",{"desc":"117","fix":"118"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [store]",{"range":"119","text":"120"},[1672,1674],"[store]"]